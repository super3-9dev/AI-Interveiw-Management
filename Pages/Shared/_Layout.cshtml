@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Security.Claims
@inject IViewLocalizer Localizer
@{
    var token = Xsrf.GetAndStoreTokens(Context).RequestToken;
    var currentCulture = Context.Request.Query["culture"].ToString();
    if (string.IsNullOrEmpty(currentCulture))
    {
        currentCulture = Context.Request.Cookies["culture"] ?? "en";
    }
    var isEnglish = currentCulture == "en";
    var isSpanish = currentCulture == "es";
}

<!DOCTYPE html>
<html lang="@currentCulture">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Intrevidor Guiado</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <div class="app-container">
        <!-- Top Bar -->
        <header class="top-bar">
            <div class="top-bar-left">
                <div class="logo">
                    <svg class="logo-svg" viewBox="0 0 48 48" width="24" height="24">
                        <circle cx="24" cy="24" r="15" fill="none" stroke="#4285f4" stroke-width="2.5"/>
                        <path d="M16 24 Q20 16 24 20 Q28 24 32 20" fill="none" stroke="#4285f4" stroke-width="2.5" stroke-linecap="round"/>
                    </svg>
                    <span class="logo-text">Intrevidor Guiado</span>
                </div>
            </div>
            <div class="top-bar-right">
                <div class="language-switcher">
                    <div class="language-dropdown">
                        <button class="language-btn" type="button">
                            <i class="bi bi-globe"></i>
                            <span class="language-text">@(isEnglish ? "English" : "Español")</span>
                        </button>
                        <div class="language-dropdown-content">
                            <a href="?culture=en"
                                class="language-option @(isEnglish ? "active" : "")">English</a>
                            <a href="?culture=es"
                                class="language-option @(isSpanish ? "active" : "")">Español</a>
                        </div>
                    </div>
                </div>
                @if (User.Identity?.IsAuthenticated == true)
                {
                    <div class="user-info">
                        <span class="user-name">@(User.FindFirst(ClaimTypes.Name)?.Value ?? User.Identity.Name ?? "User")</span>
                        <a href="/Account/Logout@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="logout-link">@Localizer["Logout"]</a>
                    </div>
                }
                else
                {
                    <div class="auth-links">
                        <a href="/Account/Login@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="login-link">@Localizer["Login"]</a>
                        <a href="/Account/Register@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="register-link">@Localizer["Register"]</a>
                    </div>
                }
            </div>
        </header>

        <div class="content-wrapper">
            <!-- Mobile Menu Button -->
            <button class="mobile-menu-btn" id="mobileMenuBtn" type="button">
                <i class="bi bi-list"></i>
            </button>
            
            <!-- Mobile Overlay -->
            <div class="mobile-overlay" id="mobileOverlay"></div>
            
            <!-- Left Sidebar -->
            <aside class="sidebar" id="sidebar">
                <!-- Mobile Close Button -->
                <button class="mobile-close-btn" id="mobileCloseBtn" type="button">
                    <i class="bi bi-x-lg"></i>
                </button>
                
                <nav class="sidebar-nav">
                    <ul class="nav-list">
                        <li class="nav-item">
                            <a href="/@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="nav-link" id="nav-home">
                                <i class="bi bi-house"></i>
                                <span>@Localizer["Home"]</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/Dashboard@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="nav-link" id="nav-dashboard">
                                <i class="bi bi-grid"></i>
                                <span>@Localizer["Dashboard"]</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/NewAnalysis@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="nav-link" id="nav-newanalysis">
                                <i class="bi bi-plus"></i>
                                <span>@Localizer["New Analysis"]</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/Results@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="nav-link" id="nav-results">
                                <i class="bi bi-file-text"></i>
                                <span>@Localizer["Results"]</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/CustomInterview@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="nav-link" id="nav-custominterview">
                                <i class="bi bi-plus-circle"></i>
                                <span>@Localizer["Custom Interview"]</span>
                            </a>
                        </li>
                    </ul>
                    
                    <ul class="nav-list bottom-nav">
                        <li class="nav-item">
                            <a href="/Settings@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="nav-link" id="nav-settings">
                                <i class="bi bi-gear"></i>
                                <span>@Localizer["Settings"]</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/Account@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="nav-link" id="nav-account">
                                <i class="bi bi-person"></i>
                                <span>@Localizer["Account"]</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </aside>

            <!-- Main Content Area -->
            <main class="main-content">
                @RenderBody()
            </main>
        </div>
    </div>

    <style>
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .app-container {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            background-color: #f8fafc;
        }

        /* Top Bar */
        .top-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 2rem;
            padding-left: 280px;
            background-color: white;
            border-bottom: 1px solid #e9ecef;
            height: 60px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .top-bar-left .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logo-svg {
            filter: drop-shadow(0 2px 4px rgba(66, 133, 244, 0.2));
        }

        .logo-text {
            font-size: 1.1rem;
            font-weight: 600;
            color: #4285f4;
        }

        .top-bar-right {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .language-switcher {
            position: relative;
        }

        .language-dropdown {
            position: relative;
            display: inline-block;
        }

        .language-btn {
            background: none;
            border: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #6c757d;
            cursor: pointer;
            padding: 0.5rem;
            border-radius: 0.25rem;
            transition: all 0.2s ease;
        }

        .language-btn:hover {
            color: #4285f4;
            background-color: #f8f9fa;
        }

        .language-text {
            font-size: 0.9rem;
            font-weight: 500;
        }

        .language-dropdown-content {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background-color: #fff;
            min-width: 120px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
            border-radius: 0.5rem;
            z-index: 1000;
            overflow: hidden;
            margin-top: 0.5rem;
            border: 1px solid #e9ecef;
        }

        .language-dropdown:hover .language-dropdown-content {
            display: block;
        }

        .language-option {
            color: #333;
            padding: 0.75rem 1rem;
            text-decoration: none;
            display: block;
            transition: background-color 0.3s ease;
            font-size: 0.9rem;
        }

        .language-option:hover {
            background-color: #f8f9fa;
            text-decoration: none;
        }

        .language-option.active {
            background-color: #e7f3ff;
            color: #0d6efd;
            font-weight: 500;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .user-name {
            background-color: #e9ecef;
            color: #6c757d;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .logout-link {
            color: #4285f4;
            text-decoration: none;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .logout-link:hover {
            text-decoration: underline;
        }

        .auth-links {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .login-link, .register-link {
            color: #4285f4;
            text-decoration: none;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .login-link:hover, .register-link:hover {
            text-decoration: underline;
        }

        /* Content Wrapper */
        .content-wrapper {
            display: flex;
            flex: 1;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            min-width: 250px;
            background-color: white;
            border-right: 1px solid #e9ecef;
            box-shadow: 1px 0 3px rgba(0, 0, 0, 0.1);
        }

        .sidebar-nav {
            padding: 2.5rem 0 1rem 0;
        }

        .nav-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .nav-list.bottom-nav {
            margin-top: 2rem;
            border-top: 1px solid #e9ecef;
            padding-top: 1rem;
        }

        .nav-item {
            margin: 0;
        }

        .nav-link {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.75rem 1.5rem;
            color: #6c757d;
            text-decoration: none;
            transition: all 0.2s ease;
            border-left: 3px solid transparent;
        }

        .nav-link:hover {
            background-color: #f8f9fa;
            color: #4285f4;
        }

        .nav-link.active {
            background-color: #e8f5e8;
            color: #28a745;
            border-left-color: #28a745;
        }

        .nav-link i {
            font-size: 1.1rem;
            width: 20px;
            text-align: center;
        }

        .nav-link span {
            font-weight: 500;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            background-color: white;
            margin: 1rem;
            margin-left: 265px;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            overflow-y: auto;
        }

        /* Mobile Menu Button */
        .mobile-menu-btn {
            display: none;
            position: fixed;
            top: 5rem;
            left: 0;
            z-index: 1001;
            background-color: #4285f4;
            color: white;
            border: none;
            border-radius: 0 1rem 1rem 0;
            padding: 0.55rem;
            font-size: 1.2rem;
            cursor: pointer;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            transition: all 0.3s ease;
            min-width: 28px;
            min-height: 28px;
        }

        .mobile-menu-btn:hover {
            background-color: #3367d6;
            transform: scale(1.05);
        }

        .mobile-menu-btn:active {
            transform: scale(0.95);
        }

        /* Mobile Overlay */
        .mobile-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .mobile-overlay.show {
            display: block;
        }

        .mobile-overlay.active {
            opacity: 1;
        }

        /* Mobile Close Button */
        .mobile-close-btn {
            display: none;
            position: absolute;
            top: 1rem;
            right: 1rem;
            z-index: 1002;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 50%;
            width: 2.5rem;
            height: 2.5rem;
            font-size: 1rem;
            cursor: pointer;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            transition: all 0.3s ease;
        }

        .mobile-close-btn:hover {
            background-color: #c82333;
            transform: scale(1.1);
        }

        .mobile-close-btn:active {
            transform: scale(0.9);
        }

        /* Responsive Design */
        @@media (max-width: 1024px) {
            .sidebar {
                width: 200px;
                min-width: 200px;
            }
        }

        @@media (max-width: 768px) {
            .mobile-menu-btn {
                display: block !important;
            }
            
            .mobile-close-btn {
                display: block !important;
            }
            
            .content-wrapper {
                flex-direction: column;
            }
            
            .sidebar {
                position: fixed !important;
                top: 0 !important;
                left: -100% !important;
                width: 280px !important;
                min-width: 280px !important;
                height: 100vh !important;
                z-index: 1000 !important;
                transition: left 0.3s ease !important;
                box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1) !important;
            }
            
            .sidebar.open {
                left: 0 !important;
            }
            
            /* Hide hamburger button when sidebar is open */
            .content-wrapper.sidebar-open .mobile-menu-btn {
                display: none !important;
            }
            
            .sidebar-nav {
                padding: 4rem 0 1rem 0;
            }
            
            .nav-link {
                padding: 1rem 1.5rem;
                font-size: 1rem;
            }
            
            .nav-link i {
                font-size: 1.2rem;
                width: 24px;
            }
            
            .main-content {
                margin: 0;
                border-radius: 0;
                margin-left: 0;
                padding-top: 1rem;
            }
            
            .top-bar {
                padding: 0.75rem 1rem;
            }
            
            .top-bar-right {
                gap: 1rem;
            }
        }
    </style>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        // Add antiforgery token to all AJAX requests
        document.addEventListener('DOMContentLoaded', function() {
            const antiforgery = document.createElement('input');
            antiforgery.type = 'hidden';
            antiforgery.name = '__RequestVerificationToken';
            antiforgery.value = '@token';

            document.querySelectorAll('form').forEach(form => {
                if (!form.querySelector('input[name="__RequestVerificationToken"]')) {
                    form.appendChild(antiforgery.cloneNode(true));
                }
            });

            // Mobile sidebar functionality
            const mobileMenuBtn = document.getElementById('mobileMenuBtn');
            const mobileCloseBtn = document.getElementById('mobileCloseBtn');
            const sidebar = document.getElementById('sidebar');
            const mobileOverlay = document.getElementById('mobileOverlay');
            const contentWrapper = document.querySelector('.content-wrapper');

            console.log('Mobile menu button:', mobileMenuBtn);
            console.log('Sidebar:', sidebar);
            console.log('Mobile overlay:', mobileOverlay);

            function toggleSidebar() {
                console.log('Toggle sidebar clicked');
                console.log('Sidebar element:', sidebar);
                console.log('Mobile overlay element:', mobileOverlay);
                
                sidebar.classList.toggle('open');
                mobileOverlay.classList.toggle('show');
                mobileOverlay.classList.toggle('active');
                contentWrapper.classList.toggle('sidebar-open');
                
                console.log('Sidebar classes:', sidebar.className);
                console.log('Overlay classes:', mobileOverlay.className);
                console.log('Content wrapper classes:', contentWrapper.className);
            }

            function closeSidebar() {
                sidebar.classList.remove('open');
                mobileOverlay.classList.remove('show');
                mobileOverlay.classList.remove('active');
                contentWrapper.classList.remove('sidebar-open');
            }

            // Event listeners
            if (mobileMenuBtn) {
                console.log('Adding click listener to mobile menu button');
                mobileMenuBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    console.log('Mobile menu button clicked!');
                    toggleSidebar();
                });
            } else {
                console.error('Mobile menu button not found!');
            }

            if (mobileCloseBtn) {
                mobileCloseBtn.addEventListener('click', closeSidebar);
            }

            if (mobileOverlay) {
                mobileOverlay.addEventListener('click', closeSidebar);
            }

            // Close sidebar when clicking on nav links (mobile)
            document.querySelectorAll('.nav-link').forEach(link => {
                link.addEventListener('click', () => {
                    if (window.innerWidth <= 768) {
                        closeSidebar();
                    }
                });
            });

            // Close sidebar on window resize if screen becomes larger
            window.addEventListener('resize', () => {
                if (window.innerWidth > 768) {
                    closeSidebar();
                }
            });

            // Preserve culture in all navigation links
            const currentCulture = '@currentCulture';
            if (currentCulture) {
                document.querySelectorAll('a[href^="/"]').forEach(link => {
                    const href = link.getAttribute('href');
                    if (href && !href.includes('culture=') && !href.includes('#')) {
                        const separator = href.includes('?') ? '&' : '?';
                        link.href = href + separator + 'culture=' + currentCulture;
                    }
                });
            }

            // Set active navigation based on current page
            setActiveNavigation();
        });

        // Function to set active navigation
        function setActiveNavigation() {
            const currentPath = window.location.pathname;
            const allNavLinks = document.querySelectorAll('.nav-link');
            
            // Remove all active classes
            allNavLinks.forEach(link => link.classList.remove('active'));
            
            // Set active based on current page
            allNavLinks.forEach(link => {
                const href = link.getAttribute('href');
                if (href) {
                    const linkPath = href.split('?')[0];
                    
                    if (linkPath === currentPath || 
                        (currentPath === '/' && linkPath === '/') ||
                        (currentPath === '/Index' && linkPath === '/')) {
                        link.classList.add('active');
                    }
                }
            });
        }

        // Function to set language and persist it
        function setLanguage(culture) {
            document.cookie = `culture=${culture}; path=/; max-age=${60 * 60 * 24 * 365}`;
        }

        // Function to switch language while preserving all URL parameters
        function switchLanguage(culture) {
            document.cookie = `culture=${culture}; path=/; max-age=${60 * 60 * 24 * 365}`;
            
            const currentUrl = new URL(window.location.href);
            const currentParams = currentUrl.searchParams;
            currentParams.set('culture', culture);
            
            window.location.href = currentUrl.toString();
        }
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>