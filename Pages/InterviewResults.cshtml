@page
@model InterviewBot.Pages.InterviewResultsModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Your Personalized Career Guidance"];
    var currentCulture = HttpContext.Request.Query["culture"].ToString();
    if (string.IsNullOrEmpty(currentCulture))
    {
        currentCulture = HttpContext.Request.Cookies["culture"] ?? "en";
    }
}

<div class="career-guidance-container">
    <!-- Header -->
    <div class="career-header">
        <h1 class="career-title">@Localizer["Your Personalized Career Guidance"]</h1>
        <p class="career-subtitle">@Localizer["Based on your profile and interview, here are your tailored insights and potential career roadmaps."]</p>
    </div>

    <!-- Main Content Grid -->
    <div class="career-content">
        <div class="career-card-flex">
           <!-- Interview Summary Card -->
            <div class="career-card interview-summary-card">
                <h2 class="card-title">@Localizer["Interview Summary"]</h2>
                <div class="summary-content">
                    <div class="summary-section">
                        <h3>@Localizer["Summary:"]</h3>
                        <p>@(string.IsNullOrEmpty(Model.Summary) ? "This is a mock summary of the interview. You demonstrated strong problem-solving skills and a clear passion for technology. Your answers were well-articulated and thoughtful." : Model.Summary)</p>
                    </div>
                    <div class="recommendations-section">
                        <h3>@Localizer["Recommendations:"]</h3>
                        <p>@(string.IsNullOrEmpty(Model.Recommendations) ? "To further improve, consider gaining more hands-on experience with cloud technologies like AWS or Google Cloud. Participating in a team-based project could also enhance your collaboration skills." : Model.Recommendations)</p>
                    </div>
                </div>
            </div>

            <!-- MBA Focus Area Card -->
            <div class="career-card mba-card">
                <h2 class="card-title">
                    <i class="bi bi-book"></i>
                    @Localizer["MBA Focus Area"]
                </h2>
                <p>@(string.IsNullOrEmpty(Model.MBAFocusArea) ? "Given your analytical skills and interest in business, focusing on 'Business Analytics' or 'Technology Management' would be a great fit." : Model.MBAFocusArea)</p>
            </div>

            <!-- Additional Tips Card -->
            <div class="career-card tips-card">
                <h2 class="card-title">
                    <i class="bi bi-lightbulb"></i>
                    @Localizer["Additional Tips"]
                </h2>
                <p>@(Model.AdditionalTips.Any() ? string.Join(" ", Model.AdditionalTips) : "Practice your public speaking by joining a club like Toastmasters. Seek informational interviews with professionals in roles you admire to gain more industry insight.")</p>
            </div>
        </div>              

        
        <!-- Career Roadmaps Card -->
        <div class="career-card roadmaps-card">
            <h2 class="card-title">@Localizer["Your Career Roadmaps"]</h2>
            <p class="card-subtitle">@Localizer["Actionable next steps for your professional journey."]</p>
            
            <div class="roadmap-accordion">
                <!-- Short-Term Roadmap -->
                <div class="roadmap-item">
                    <div class="roadmap-header" onclick="toggleRoadmap('short-term')">
                        <div class="roadmap-title-section">
                            <i class="bi bi-link-45deg roadmap-icon"></i>
                            <h3>@Model.YourCareerRoadmaps.FirstOrDefault(r => r.Title.Contains("Short-Term") || r.Title.Contains("Corto Plazo"))?.Title</h3>
                        </div>
                        <i class="bi bi-chevron-down" id="short-term-arrow"></i>
                    </div>
                    <div class="roadmap-content" id="short-term-content">
                        <ol class="roadmap-steps">
                            @if (Model.YourCareerRoadmaps.Any())
                            {
                                @foreach (var roadmap in Model.YourCareerRoadmaps.Where(r => r.Title.Contains("Short-Term") || r.Title.Contains("Corto Plazo")))
                                {
                                    @foreach (var step in roadmap.Steps)
                                    {
                                        <li>@step</li>
                                    }
                                }
                            }
                            else
                            {
                                <li>@Localizer["Complete a certification in a relevant technology (e.g., AWS Certified Cloud Practitioner)."]</li>
                                <li>@Localizer["Contribute to an open-source project to build your portfolio."]</li>
                                <li>@Localizer["Network with at least 5 professionals in your target industry."]</li>
                            }
                        </ol>
                    </div>
                </div>

                <!-- Medium-Term Roadmap -->
                <div class="roadmap-item">
                    <div class="roadmap-header" onclick="toggleRoadmap('medium-term')">
                        <div class="roadmap-title-section">
                            <i class="bi bi-arrow-up-circle roadmap-icon"></i>
                            <h3>@Model.YourCareerRoadmaps.FirstOrDefault(r => r.Title.Contains("Medium-Term") || r.Title.Contains("Mediano Plazo") || r.Title.Contains("Medio Plazo"))?.Title</h3>
                        </div>
                        <i class="bi bi-chevron-down" id="medium-term-arrow"></i>   
                    </div>
                    <div class="roadmap-content" id="medium-term-content">
                        <ol class="roadmap-steps">
                            @if (Model.YourCareerRoadmaps.Any())
                            {
                                @foreach (var roadmap in Model.YourCareerRoadmaps.Where(r => r.Title.Contains("Medium-Term") || r.Title.Contains("Mediano Plazo") || r.Title.Contains("Medio Plazo")))
                                {
                                    @foreach (var step in roadmap.Steps)
                                    {
                                        <li>@step</li>
                                    }
                                }
                            }
                            else
                            {
                                <li>@Localizer["Gain practical experience through internships in data roles"]</li>
                                <li>@Localizer["Deepen industry knowledge through research and articles"]</li>
                                <li>@Localizer["Participate in relevant projects within current job"]</li>
                                <li>@Localizer["Build relationships with mentors in the field"]</li>
                            }
                        </ol>
                    </div>
                </div>

                <!-- Long-Term Roadmap -->
                <div class="roadmap-item">
                    <div class="roadmap-header" onclick="toggleRoadmap('long-term')">
                        <div class="roadmap-title-section">
                            <i class="bi bi-book roadmap-icon"></i>
                            <h3>@Model.YourCareerRoadmaps.FirstOrDefault(r => r.Title.Contains("Long-Term") || r.Title.Contains("Largo Plazo"))?.Title</h3>
                        </div>
                        <i class="bi bi-chevron-down" id="long-term-arrow"></i>
                    </div>
                    <div class="roadmap-content" id="long-term-content">
                        <ol class="roadmap-steps">
                            @if (Model.YourCareerRoadmaps.Any())
                            {
                                @foreach (var roadmap in Model.YourCareerRoadmaps.Where(r => r.Title.Contains("Long-Term") || r.Title.Contains("Largo Plazo")))
                                {
                                    @foreach (var step in roadmap.Steps)
                                    {
                                        <li>@step</li>
                                    }
                                }
                            }
                            else
                            {
                                <li>@Localizer["Aim for a management role in data analytics or project management"]</li>
                                <li>@Localizer["Lead innovative projects to further develop leadership skills"]</li>
                                <li>@Localizer["Continuously update skills with advanced courses"]</li>
                                <li>@Localizer["Contribute to professional communities through speaking or publications"]</li>
                            }
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="action-buttons">
        <a href="/Dashboard@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="btn btn-outline">
            @Localizer["Back to Dashboard"]
        </a>
        <a href="/NewAnalysis@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")" class="btn btn-primary">
            @Localizer["Start New Analysis"]
        </a>
    </div>
</div>

<style>
    .career-guidance-container {
        min-height: 100vh;
        background: #f5f5f5;
        padding: 2rem 0;
    }

    /* Header */
    .career-header {
        text-align: center;
        margin-bottom: 3rem;
        padding: 0 2rem;
    }

    .career-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #1a1a1a;
        margin: 0 0 1rem 0;
    }

    .career-subtitle {
        font-size: 1.2rem;
        color: #666;
        margin: 0;
        max-width: 600px;
        margin: 0 auto;
    }

    .career-card-flex {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    /* Main Content Grid */
    .career-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 2rem;
        display: grid;
        align-items: flex-start;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
        margin-bottom: 3rem;
    }

    /* Career Cards */
    .career-card {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        border: 1px solid #e0e0e0;
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #1a1a1a;
        margin: 0 0 1rem 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .card-subtitle {
        color: #666;
        margin: 0 0 1.5rem 0;
        font-size: 1rem;
    }

    /* Interview Summary Card */
    .interview-summary-card {
        grid-column: 1;
        grid-row: 1;
    }

    .summary-content h3 {
        font-size: 1.1rem;
        font-weight: 600;
        color: #1a1a1a;
        margin: 0 0 0.5rem 0;
    }

    .summary-content p {
        color: #666;
        line-height: 1.6;
        margin: 0 0 1.5rem 0;
    }

    .summary-content p:last-child {
        margin-bottom: 0;
    }

    /* Roadmaps Card */
    .roadmaps-card {
        grid-column: 2;
        grid-row: 1;
    }

    .roadmap-accordion {
        margin-top: 1rem;
    }

    .roadmap-item {
        border-bottom: 1px solid #e0e0e0;
    }

    .roadmap-item:last-child {
        border-bottom: none;
    }

    .roadmap-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 0;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .roadmap-header:hover {
        background-color: #f8f9fa;
        margin: 0 -2rem;
        padding: 1rem 2rem;
        border-radius: 8px;
    }

    .roadmap-title-section {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .roadmap-icon {
        font-size: 1.2rem;
        color: #4285f4;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .roadmap-header h3 {
        font-size: 1rem;
        font-weight: 600;
        color: #1a1a1a;
        margin: 0;
    }

    .roadmap-header i {
        font-size: 1.2rem;
        color: #666;
        transition: transform 0.3s ease;
    }

    .roadmap-content {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.3s ease;
    }

    .roadmap-content.expanded {
        max-height: 500px;
    }

    .roadmap-steps {
        padding: 1rem 0;
        margin: 0;
        padding-left: 1.5rem;
    }

    .roadmap-steps li {
        color: #666;
        line-height: 1.6;
        margin-bottom: 0.5rem;
    }

    .roadmap-steps li:last-child {
        margin-bottom: 0;
    }

    /* MBA Focus Area Card */
    .mba-card {
        grid-column: 1;
        grid-row: 2;
    }

    .mba-card p {
        color: #666;
        line-height: 1.6;
        margin: 0;
    }

    /* Additional Tips Card */
    .tips-card {
        grid-column: 2;
        grid-row: 2;
    }

    .tips-card p {
        color: #666;
        line-height: 1.6;
        margin: 0;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        justify-content: center;
        gap: 1rem;
        margin-top: 2rem;
    }

    .btn {
        padding: 1rem 2rem;
        border-radius: 8px;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        font-size: 1rem;
    }

    .btn-outline {
        background: white;
        color: #666;
        border: 2px solid #e0e0e0;
    }

    .btn-outline:hover {
        background: #f8f9fa;
        color: #1a1a1a;
        text-decoration: none;
    }

    .btn-primary {
        background: #4285f4;
        color: white;
    }

    .btn-primary:hover {
        background: #3367d6;
        text-decoration: none;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .career-content {
            grid-template-columns: 1fr;
            padding: 0 1rem;
        }

        .interview-summary-card,
        .roadmaps-card,
        .mba-card,
        .tips-card {
            grid-column: 1;
        }

        .career-title {
            font-size: 2rem;
        }

        .career-subtitle {
            font-size: 1rem;
        }

        .career-card {
            padding: 1.5rem;
        }

        .action-buttons {
            flex-direction: column;
            align-items: center;
        }

        .btn {
            width: 100%;
            max-width: 300px;
        }
    }

    @@media (max-width: 480px) {
        .career-header {
            padding: 0 1rem;
        }

        .career-title {
            font-size: 1.75rem;
        }

        .career-card {
            padding: 1rem;
        }
    }
</style>

<script>
    // Accordion functionality for roadmaps
    function toggleRoadmap(roadmapType) {
        const content = document.getElementById(roadmapType + '-content');
        const arrow = document.getElementById(roadmapType + '-arrow');
        
        if (content.classList.contains('expanded')) {
            content.classList.remove('expanded');
            arrow.style.transform = 'rotate(0deg)';
        } else {
            // Close all other roadmaps
            const allContents = document.querySelectorAll('.roadmap-content');
            const allArrows = document.querySelectorAll('.roadmap-header i');
            
            allContents.forEach(c => c.classList.remove('expanded'));
            allArrows.forEach(a => a.style.transform = 'rotate(0deg)');
            
            // Open the selected roadmap
            content.classList.add('expanded');
            arrow.style.transform = 'rotate(180deg)';
        }
    }

    // Initialize with short-term roadmap expanded
    document.addEventListener('DOMContentLoaded', function() {
        const shortTermContent = document.getElementById('short-term-content');
        const shortTermArrow = document.getElementById('short-term-arrow');
        
        if (shortTermContent) {
            shortTermContent.classList.add('expanded');
            shortTermArrow.style.transform = 'rotate(180deg)';
        }
    });

</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
