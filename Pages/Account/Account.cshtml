@page "/Account"
@model InterviewBot.Pages.Account.AccountModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Account"];
    var currentCulture = HttpContext.Request.Query["culture"].ToString();
    if (string.IsNullOrEmpty(currentCulture))
    {
        currentCulture = HttpContext.Request.Cookies["culture"] ?? "en";
    }
}

<div class="account-page-container">
    <div class="page-header">
        <h1 class="page-title">@Localizer["Account & Profile Management"]</h1>
        <p class="page-subtitle">@Localizer["Manage your account information and profile details."]</p>
    </div>

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle"></i>
            @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle"></i>
            @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="account-content">
        <!-- Left Column -->
        <div class="left-column">
            <!-- User Information Card -->
            <div class="info-card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="bi bi-person"></i>
                        @Localizer["User Information"]
                    </h3>
                </div>
                <div class="card-body">
                    <form method="post" asp-page-handler="UpdateUserInfo" class="update-form">
                        <input asp-for="Email" type="hidden" />
                        <div class="form-group">
                            <label asp-for="FullName" class="form-label">@Localizer["Full Name"]</label>
                            <input asp-for="FullName" name="FullName" class="form-control" placeholder="@Localizer["Enter your full name"]" />
                            <span asp-validation-for="FullName" class="text-danger"></span>
                        </div>
                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-lg"></i>
                                @Localizer["Update User"]
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Password Information Card -->
            <div class="info-card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="bi bi-shield-lock"></i>
                        @Localizer["Password Information"]
                    </h3>
                </div>
                <div class="card-body">
                    <form method="post" asp-page-handler="UpdatePassword" class="update-form">
                        <div class="form-group">
                            <label asp-for="CurrentPassword" class="form-label">@Localizer["Current Password"]</label>
                            <input asp-for="CurrentPassword" type="password" class="form-control"
                                placeholder="@Localizer["Enter current password"]" />
                            <small class="form-text text-muted">@Localizer["Required to change password"]</small>
                            @if (!string.IsNullOrEmpty(ViewData["CurrentPasswordError"]?.ToString()))
                            {
                                <div class="text-danger small">@ViewData["CurrentPasswordError"]</div>
                            }
                        </div>

                        <div class="form-group">
                            <label asp-for="NewPassword" class="form-label">@Localizer["New Password"]</label>
                            <input asp-for="NewPassword" type="password" class="form-control"
                                placeholder="@Localizer["Enter new password"]" />
                            <small class="form-text text-muted">@Localizer["Leave blank to keep current password"]</small>
                            @if (!string.IsNullOrEmpty(ViewData["NewPasswordError"]?.ToString()))
                            {
                                <div class="text-danger small">@ViewData["NewPasswordError"]</div>
                            }
                        </div>

                        <div class="form-group">
                            <label asp-for="ConfirmPassword" class="form-label">@Localizer["Confirm New Password"]</label>
                            <input asp-for="ConfirmPassword" type="password" class="form-control"
                                placeholder="@Localizer["Confirm new password"]" />
                            <small class="form-text text-muted">@Localizer["Must match new password"]</small>
                            @if (!string.IsNullOrEmpty(ViewData["ConfirmPasswordError"]?.ToString()))
                            {
                                <div class="text-danger small">@ViewData["ConfirmPasswordError"]</div>
                            }
                        </div>

                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-shield-check"></i>
                                @Localizer["Update Password"]
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Right Column -->
        <div class="right-column">
            <!-- Profile Information Card -->
            <div class="info-card profile-card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="bi bi-file-person"></i>
                        @Localizer["Profile Information"]
                    </h3>
                </div>
                <div class="card-body">
                <form method="post" asp-page-handler="UpdateProfile" class="update-form">
                    <div class="profile-section">
                        <h4 class="profile-section-title">@Localizer["Strengths"]</h4>
                        <div class="profile-content">
                            @if (!string.IsNullOrEmpty(Model.Strengths))
                            {
                                <textarea asp-for="Strengths" style="height: 178px; resize: none;" class="form-control" rows="6" placeholder="@Localizer["Enter your strengths"]">@Model.Strengths</textarea>
                            }
                            else
                            {
                                <textarea asp-for="Strengths" style="height: 178px; resize: none;" class="form-control" rows="6" placeholder="@Localizer["Enter your strengths"]"></textarea>
                            }
                        </div>
                    </div>

                    <div class="profile-section">
                        <h4 class="profile-section-title">@Localizer["Areas for Improvement"]</h4>
                        <div class="profile-content">
                            @if (!string.IsNullOrEmpty(Model.Weaknesses))
                            {
                                <textarea asp-for="Weaknesses" style="height: 178px; resize: none;" class="form-control" rows="6" placeholder="@Localizer["Enter your weaknesses"]">@Model.Weaknesses</textarea>
                            }
                            else
                            {
                                <textarea asp-for="Weaknesses" style="height: 178px; resize: none;" class="form-control" rows="6" placeholder="@Localizer["Enter your weaknesses"]"></textarea>
                            }
                        </div>
                    </div>

                    <div class="profile-section">
                        <h4 class="profile-section-title">@Localizer["Future Career Goals"]</h4>
                        <div class="profile-content">
                            @if (!string.IsNullOrEmpty(Model.FutureCareerGoals))
                            {
                                <textarea asp-for="FutureCareerGoals" style="height: 178px; resize: none;" class="form-control" rows="6" placeholder="@Localizer["Enter your future career goals"]">@Model.FutureCareerGoals</textarea>
                            }
                            else
                            {
                                <textarea asp-for="FutureCareerGoals" style="height: 178px; resize: none;" class="form-control" rows="6" placeholder="@Localizer["Enter your future career goals"]"></textarea>
                            }
                        </div>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-person-check"></i>
                            @Localizer["Update Profile"]
                        </button>
                    </div>
                </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Back to Dashboard -->
    <div class="back-to-dashboard">
        <a href="/Dashboard@(!string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "")"
            class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i>
            @Localizer["Back to Dashboard"]
        </a>
    </div>
</div>

<!-- Profile Update Modal -->
<!-- <div class="modal fade" id="profileModal" tabindex="-1" aria-labelledby="profileModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="profileModalLabel">@Localizer["Update Profile Information"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="UpdateProfile" class="update-form">
                    <div class="form-group">
                        <label asp-for="Strengths" class="form-label">@Localizer["Strengths"]</label>
                        <textarea asp-for="Strengths" class="form-control" rows="4"
                            placeholder="@Localizer["Describe your key strengths and skills"]"></textarea>
                    </div>

                    <div class="form-group">
                        <label asp-for="Weaknesses" class="form-label">@Localizer["Areas for Improvement"]</label>
                        <textarea asp-for="Weaknesses" class="form-control" rows="4"
                            placeholder="@Localizer["Describe areas you'd like to improve"]"></textarea>
                    </div>

                    <div class="form-group">
                        <label asp-for="FutureCareerGoals" class="form-label">@Localizer["Future Career Goals"]</label>
                        <textarea asp-for="FutureCareerGoals" class="form-control" rows="4"
                            placeholder="@Localizer["Describe your career aspirations and goals"]"></textarea>
                    </div>

                    <div class="form-actions" style="gap: 10px">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-person-check"></i>
                            @Localizer["Update Profile Information"]
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div> -->

<style>
    .account-page-container {
        padding: 2rem;
        min-height: 100vh;
    }

    .page-header {
        margin-bottom: 2rem;
        text-align: center;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #333;
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        font-size: 1.1rem;
        color: #666;
        margin: 0;
    }

    .account-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
        max-width: 1200px;
        margin: 0 auto;
    }

    .left-column {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .right-column {
        display: flex;
        flex-direction: column;
    }

    .info-card {
        background: white;
        border-radius: 0.75rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .info-card .card-header {
        background: white;
        padding: 1.5rem;
        border-bottom: 1px solid #e9ecef;
    }

    .info-card .card-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #333;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .info-card .card-title i {
        color: #6c757d;
    }

    .info-card .card-body {
        padding: 1.5rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        font-weight: 600;
        color: #333;
        margin-bottom: 0.5rem;
        display: block;
        font-size: 0.9rem;
    }

    .form-control {
        border: 1px solid #ddd;
        border-radius: 0.5rem;
        padding: 0.75rem;
        font-size: 1rem;
        transition: all 0.2s ease;
        width: 100%;
        background-color: #fff;
    }

    .form-control:focus {
        border-color: #6f42c1;
        box-shadow: 0 0 0 0.2rem rgba(111, 66, 193, 0.25);
        outline: none;
    }

    .form-text {
        font-size: 0.8rem;
        color: #6c757d;
        margin-top: 0.25rem;
    }

    .text-danger {
        color: #dc3545;
        font-size: 0.8rem;
        margin-top: 0.25rem;
        display: block;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        margin-top: 1.5rem;
        padding-top: 1rem;
        border-top: 1px solid #e9ecef;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        border-radius: 0.5rem;
        text-decoration: none;
        transition: all 0.2s ease;
        border: none;
        cursor: pointer;
        font-size: 0.9rem;
    }

    .btn-outline-secondary {
        background-color: transparent;
        border: 1px solid #6c757d;
        color: #6c757d;
    }

    .btn-outline-secondary:hover {
        background-color: #6c757d;
        color: white;
    }

    .btn-primary {
        background-color: #3b82f6;
        color: white;
        border: none;
    }

    .btn-primary:hover {
        background-color: #2563eb;
        transform: translateY(-1px);
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        border: none;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }

    .profile-card {
        height: fit-content;
    }

    .profile-section {
        margin-bottom: 1.5rem;
    }

    .profile-section:last-of-type {
        margin-bottom: 0;
    }

    .profile-section-title {
        font-size: 1rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 0.75rem;
    }

    .profile-content {
        border-radius: 0.5rem;
        height: 180px;
        overflow: auto;
    }

    .profile-content p {
        margin: 0;
        line-height: 1.5;
        color: #555;
    }

    .text-muted {
        color: #6c757d !important;
        font-style: italic;
    }

    .back-to-dashboard {
        text-align: center;
        margin-top: 2rem;
    }

    .alert {
        margin-bottom: 1.5rem;
        border: none;
        border-radius: 0.5rem;
        padding: 1rem 1.25rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .alert-success {
        background-color: #d1fae5;
        color: #065f46;
        border-left: 4px solid #10b981;
    }

    .alert-danger {
        background-color: #fee2e2;
        color: #991b1b;
        border-left: 4px solid #ef4444;
    }

    .alert i {
        font-size: 1.25rem;
    }

    .btn-close {
        margin-left: auto;
        background: none;
        border: none;
        font-size: 1.25rem;
        color: inherit;
        opacity: 0.7;
        cursor: pointer;
        padding: 0;
        width: auto;
        height: auto;
    }

    .btn-close:hover {
        opacity: 1;
    }

    /* Modal Styles */
    .modal-content {
        border-radius: 0.75rem;
        border: none;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        border-bottom: 1px solid #e9ecef;
        padding: 1.5rem;
    }

    .modal-title {
        font-weight: 600;
        color: #333;
    }

    .modal-body {
        padding: 1.5rem;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .account-page-container {
            padding: 1rem;
        }

        .account-content {
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }

        .page-title {
            font-size: 2rem;
        }

        .info-card .card-header,
        .info-card .card-body {
            padding: 1rem;
        }

        .form-actions {
            flex-direction: column;
            align-items: stretch;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }
    }

    @@media (max-width: 480px) {
        .page-title {
            font-size: 1.75rem;
        }

        .account-page-container {
            padding: 0.5rem;
        }
    }
</style>

<script>
    // Function to update the header username immediately after successful update
    function updateHeaderUsername(newFullName) {
        const userNameElement = document.querySelector('.user-name');
        if (userNameElement) {
            userNameElement.textContent = newFullName;
        }
    }

    // Listen for form submission and update header if successful
    document.addEventListener('DOMContentLoaded', function () {
        const userInfoForm = document.querySelector('form[asp-page-handler="UpdateUserInfo"]');
        if (userInfoForm) {
            userInfoForm.addEventListener('submit', function (e) {
                // Store the current full name value to update header if needed
                const fullNameInput = this.querySelector('input[name="FullName"]');
                if (fullNameInput) {
                    this.dataset.fullName = fullNameInput.value;
                }
            });
        }

        // Check if there's a success message (indicating successful update)
        const successAlert = document.querySelector('.alert-success');
        if (successAlert && successAlert.textContent.includes('User information updated successfully')) {
            // Update the header immediately
            const fullNameInput = document.querySelector('input[name="FullName"]');
            if (fullNameInput) {
                updateHeaderUsername(fullNameInput.value);
            }
        }
    });
</script>
