t@page
@model InterviewBot.Pages.ResultsModel
@using Microsoft.AspNetCore.Mvc.Localization
@using InterviewBot.Models
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "Results";
}

@section Styles {
    <style>
        .external-api-badge {
            display: inline-block;
            background: #10b981;
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.75rem;
            font-weight: 500;
            margin-left: 0.5rem;
        }

        .external-api-result {
            border-left: 4px solid #10b981;
        }
    </style>
}

<div class="results-container">
    <div class="page-header">
        <h1 class="page-title">Your Results</h1>
        <p class="page-subtitle">Review your interview sessions and resume analyses</p>
    </div>

    @if (Model.Profiles.Any() || Model.InterviewSessions.Any())
    {
        <div class="results-grid">
            <!-- Resume Analysis Results -->
            <div class="results-section">
                <div class="section-header">
                    <div class="section-icon">üìä</div>
                    <h2 class="section-title">Resume Analyses</h2>
                </div>

                @if (Model.Profiles.Any())
                {
                    <ul class="results-list">
                        @foreach (var profile in Model.Profiles)
                        {
                            <li class="result-item">
                                <div class="result-title">Profile #@profile.Id</div>
                                <div class="result-meta">
                                    <span>@profile.CreatedAt.ToString("MMM dd, yyyy")</span>
                                </div>
                                <div class="result-description">
                                    @if (profile.Status == "Completed")
                                    {
                                        <span>Analysis completed successfully</span>
                                        @if (!string.IsNullOrEmpty(profile.ExternalAPIResponse))
                                        {
                                            <span class="external-api-badge">External API Data Available</span>
                                        }
                                    }
                                    else if (profile.Status == "Processing")
                                    {
                                        <span>Analysis in progress... @profile.Progress% complete</span>
                                    }
                                    else
                                    {
                                        <span>Analysis failed. Please try again.</span>
                                    }
                                </div>
                                <div class="result-actions">
                                    @if (profile.Status == "Completed")
                                    {
                                        <a href="/ResumeAnalysisResults?id=@profile.Id" class="btn btn-primary">View Results</a>
                                    }
                                    else if (profile.Status == "Failed")
                                    {
                                        <a href="/ResumeAnalysisResults?id=@profile.Id" class="btn btn-secondary">Retry</a>
                                    }
                                </div>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <div class="empty-state">
                        <div class="empty-icon">üìÑ</div>
                        <div class="empty-title">No Resume Analyses Yet</div>
                        <div class="empty-description">Start by uploading your resume for AI analysis</div>
                        <a href="/NewAnalysis" class="create-first-btn">Start New Analysis</a>
                    </div>
                }
            </div>

            <!-- External API Results -->
            @if (Model.Profiles.Any(p => !string.IsNullOrEmpty(p.ExternalAPIResponse)))
            {
                <div class="results-section">
                    <div class="section-header">
                        <div class="section-icon">üåê</div>
                        <h2 class="section-title">External API Analysis</h2>
                    </div>
                    <ul class="results-list">
                        @foreach (var profile in Model.Profiles.Where(p => !string.IsNullOrEmpty(p.ExternalAPIResponse)))
                        {
                            <li class="result-item external-api-result">
                                <div class="result-title">External Analysis #@profile.Id</div>
                                <div class="result-meta">
                                    <span>@profile.UpdatedAt?.ToString("MMM dd, yyyy")</span>
                                    <span class="result-status status-completed">API Response Received</span>
                                </div>
                                <div class="result-description">
                                    <span>External platform analysis completed</span>
                                </div>
                                <div class="result-actions">
                                    <a href="/ExternalAPIResults?id=@profile.Id" class="btn btn-success">View API Results</a>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            }

            <!-- Interview Results -->
            <div class="results-section">
                <div class="section-header">
                    <div class="section-icon">üéØ</div>
                    <h2 class="section-title">Interview Sessions</h2>
                </div>

                @if (Model.InterviewSessions.Any())
                {
                    <ul class="results-list">
                        @foreach (var session in Model.InterviewSessions)
                        {
                            <li class="result-item">
                                <div class="result-title">
                                    @(session.InterviewCatalog?.Title ?? session.CustomInterview?.Title ?? "Interview Session")
                                </div>
                                <div class="result-meta">
                                    <span>@session.StartTime.ToString("MMM dd, yyyy")</span>
                                    <span
                                        class="result-status @(session.Status == InterviewStatus.Completed ? "status-completed" : session.Status == InterviewStatus.InProgress ? "status-in-progress" : "status-failed")">
                                        @session.Status
                                    </span>
                                </div>
                                <div class="result-description">
                                    @if (session.Status == InterviewStatus.Completed)
                                    {
                                        <span>Interview completed. Score: @(session.Score?.ToString() ?? "N/A")/100</span>
                                    }
                                    else if (session.Status == InterviewStatus.InProgress)
                                    {
                                        <span>Interview in progress. Question @session.CurrentQuestionNumber</span>
                                    }
                                    else
                                    {
                                        <span>Interview @session.Status.ToString().ToLower()</span>
                                    }
                                </div>
                                <div class="result-actions">
                                    @if (session.Status == InterviewStatus.Completed)
                                    {
                                        <a href="/InterviewResults?id=@session.Id" class="btn btn-primary">View Results</a>
                                    }
                                    else if (session.Status == InterviewStatus.InProgress)
                                    {
                                        <a href="/InterviewSession?id=@session.Id" class="btn btn-secondary">Continue</a>
                                    }
                                </div>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <div class="empty-state">
                        <div class="empty-icon">üé§</div>
                        <div class="empty-title">No Interview Sessions Yet</div>
                        <div class="empty-description">Start your first interview to see results here</div>
                        <a href="/CustomInterview" class="create-first-btn">Start Interview</a>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <!-- Complete Empty State -->
        <div class="empty-state">
            <div class="empty-icon">üìã</div>
            <div class="empty-title">No Results Yet</div>
            <div class="empty-description">Get started by analyzing your resume or taking an interview</div>
            <div style="display: flex; gap: 1rem; justify-content: center; flex-wrap: wrap;">
                <a href="/NewAnalysis" class="create-first-btn">Analyze Resume</a>
                <a href="/CustomInterview" class="create-first-btn">Start Interview</a>
            </div>
        </div>
    }
</div>
